/* DependencyExampleFxControl.css */
.root {
/* Not sure why, but it isn't resolving these. maybe must be scene level?
   In any case, left here so the raw values can be copied for use */
    OPAQUE_RED: rgba(255, 0, 0, 0.3);
    OPAQUE_GOLD: rgba(255, 215, 0, 0.3);
    OPAQUE_GREEN: rgba(0, 128, 0, 0.3);
    OPAQUE_RED: rgba(255, 0, 0, 0.3);
    OPAQUE_DARKORANGE: rgba(255, 140, 0, 0.3);
    OPAQUE_DARKRED: rgba(139, 0, 0, 0.3);
    OPAQUE_CHOCOLATE: rgba(210, 105, 30, 0.3);
    OPAQUE_DARKKHAKI: rgba(189, 183, 107, 0.3); /*#bdb76b*/
    OPAQUE_PINK: rgba(189, 183, 107, 0.3);
    OPAQUE_LIGHTGREEN: rgba(144, 238, 144, 0.3);
    OPAQUE_SKYBLUE: rgba(135, 206, 235, 0.3);
    OPAQUE_BLUE: rgba(0, 0, 255, 0.3);
    OPAQUE_ROSYBROWN: rgba(188, 143, 143, 0.3);
    OPAQUE_KHAKI: rgba(240, 230, 140, 0.3);
    OPAQUE_GRAY: rgba(128, 128, 128, 0.3);
    OPAQUE_AQUA: rgba(0, 255, 255, 0.3);
    DARK_NAVY: #000064;
    DARK_MAROON: #5a0000;
    PANEL_BACKGROUND: #e7e7e7;
    TITLE_TEXT: #7193bb;
    CYLINDER_FRAME: #b7bdc2;
    CYLINDER_CAP: #d4d8dd;
    CYLINDER_TUBE: #667a90;
    DECLARATION_COLOR: OPAQUE_DARKORANGE;
    DEFINITION_COLOR: OPAQUE_GOLD;
    ASSIGNMENT_COLOR: OPAQUE_BLUE;
    CALL_COLOR: OPAQUE_GREEN;
    REFERENCE_COLOR: OPAQUE_DARKKHAKI;
    DECLARATION_COLOR_HOVER: darkorange;
    DEFINITION_COLOR_HOVER: gold;
    ASSIGNMENT_COLOR_HOVER: blue;
    CALL_COLOR_HOVER: green;
    REFERENCE_COLOR_HOVER: darkkhaki;
    FX_CONTROL_BACKGROUND: rgba(64, 64, 64, 0.3);
    NODE_COLOR: OPAQUE_BLUE;
    NODE_COLOR_HOVER: blue;
    EDGE_COLOR: OPAQUE_GOLD;
    EDGE_COLOR_HOVER: gold;
}

.DependencyExampleFxControl {
    -fx-glass-color: rgba(64, 64, 64, 0.3);
    -fx-background-color: linear-gradient(to bottom, derive(-fx-glass-color, 50%), -fx-glass-color);
    -fx-border-color: derive(-fx-glass-color, -60%);
    -fx-border-width: 1;
    -fx-background-insets: 1;
    -fx-border-radius: 3;
    -fx-background-radius: 3;
    -fx-font-size: 10;
    -fx-font-weight: normal;
    -fx-font-family: arial;
    -fx-text-fill: black;
}

/* same as rectangle border pane */
.MySimpleNode {
    -fx-border-width: 1.2;
    -fx-border-radius: 6.0;
    -fx-background-radius: 6.0;
    -fx-background-insets: 0.9;
/*    -fx-border-color: rgba(255, 0, 0, 0.3);
    -fx-background-color: linear-gradient( from 0% 0% to 100% 100%, rgb(178, 178, 178), rgb(255,255,255) );
*/
/*    
    -fx-glass-color: rgba(0, 0, 255, 0.3);
    -fx-background-color: linear-gradient(to bottom, rgb(derive(-fx-glass-color, 20%), -fx-glass-color);
    -fx-border-color: derive(-fx-glass-color, -60%);
*/
}
.MySimpleNode:hover {
    -fx-border-width: 2;
/*
    -fx-glass-color: blue;
    -fx-background-color: linear-gradient(from 0% 0% to 100% 100%, derive(-fx-glass-color, 20%), -fx-glass-color);
    -fx-border-color: derive(-fx-glass-color, -60%);
*/    
}

.Node {
	/* SQLDev blue: rgb(153,181,207) */
    -fx-background-color: linear-gradient( from 0% 0% to 100% 100%, rgb(153,181,207), white );
    -fx-border-color: derive(rgb(153,181,207), -60%);
}
.Node:hover {
    -fx-background-color: linear-gradient( from 100% 100% to 0% 0%, gold, white );
    -fx-border-color: gold;
}

/* These don't work - see comments in java file */
.Edge {
    -fx-glass-color: EDGE_COLOR;
    -fx-background-color: linear-gradient(to bottom, derive(-fx-glass-color, 50%), -fx-glass-color);
    -fx-border-color: derive(-fx-glass-color, -60%);
}
.Edge:hover {
    -fx-glass-color: EDGE_COLOR_HOVER;
    -fx-background-color: linear-gradient(to bottom, derive(-fx-glass-color, 50%), -fx-glass-color);
    -fx-border-color: derive(-fx-glass-color, -60%);
}
